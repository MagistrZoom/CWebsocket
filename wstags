!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AIO_ALLDONE	/usr/include/aio.h	/^  AIO_ALLDONE$/;"	e	enum:__anon2
AIO_ALLDONE	/usr/include/aio.h	111;"	d
AIO_CANCELED	/usr/include/aio.h	/^  AIO_CANCELED,$/;"	e	enum:__anon2
AIO_CANCELED	/usr/include/aio.h	107;"	d
AIO_NOTCANCELED	/usr/include/aio.h	/^  AIO_NOTCANCELED,$/;"	e	enum:__anon2
AIO_NOTCANCELED	/usr/include/aio.h	109;"	d
BUFFER_SIZE	./server.c	6;"	d	file:
CFLAGS	./Makefile	/^CFLAGS=-g -march=native -Werror -Wshadow -c -std=c11 -o$/;"	m
ERBUF	./server.h	/^	ERBUF,	\/\/ -\/\/- read -\/\/-$/;"	e	enum:ESERVER
ESERVER	./server.h	/^enum ESERVER{$/;"	g
EWBUF	./server.h	/^	EWBUF = 1, \/\/op with write buffer failed$/;"	e	enum:ESERVER
EWS	./websocket.h	/^enum EWS{$/;"	g
EWSFINCONT	./websocket.h	/^	EWSFINCONT,$/;"	e	enum:EWS
EWSLONG	./websocket.h	/^	EWSLONG,$/;"	e	enum:EWS
EWSMASKING	./websocket.h	/^	EWSMASKING = 1,$/;"	e	enum:EWS
EWSUNDEF	./websocket.h	/^	EWSUNDEF$/;"	e	enum:EWS
LFLAGS	./Makefile	/^LFLAGS=-pthread -lrt -lssl -lcrypto -o$/;"	m
LIO_NOP	/usr/include/aio.h	/^  LIO_NOP$/;"	e	enum:__anon3
LIO_NOP	/usr/include/aio.h	123;"	d
LIO_NOWAIT	/usr/include/aio.h	/^  LIO_NOWAIT$/;"	e	enum:__anon4
LIO_NOWAIT	/usr/include/aio.h	133;"	d
LIO_READ	/usr/include/aio.h	/^  LIO_READ,$/;"	e	enum:__anon3
LIO_READ	/usr/include/aio.h	119;"	d
LIO_WAIT	/usr/include/aio.h	/^  LIO_WAIT,$/;"	e	enum:__anon4
LIO_WAIT	/usr/include/aio.h	131;"	d
LIO_WRITE	/usr/include/aio.h	/^  LIO_WRITE,$/;"	e	enum:__anon3
LIO_WRITE	/usr/include/aio.h	121;"	d
MAX_CLIENTS	./server.c	5;"	d	file:
OPBIN	./websocket.h	/^	OPBIN,$/;"	e	enum:__anon1
OPCLOSE	./websocket.h	/^	OPCLOSE = 8,$/;"	e	enum:__anon1
OPCONT	./websocket.h	/^	OPCONT = 0,$/;"	e	enum:__anon1
OPPING	./websocket.h	/^	OPPING,$/;"	e	enum:__anon1
OPPONG	./websocket.h	/^	OPPONG$/;"	e	enum:__anon1
OPTEXT	./websocket.h	/^	OPTEXT,$/;"	e	enum:__anon1
SRBUF	./server.h	/^	SRBUF  \/\/ -\/\/- read buffer$/;"	e	enum:ESERVER
SWBUF	./server.h	/^	SWBUF, \/\/success op with write buffer$/;"	e	enum:ESERVER
_AIO_H	/usr/include/aio.h	23;"	d
__abs_prio	/usr/include/aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb
__abs_prio	/usr/include/aio.h	/^  int __abs_prio;$/;"	m	struct:aiocb64
__error_code	/usr/include/aio.h	/^  int __error_code;$/;"	m	struct:aiocb
__error_code	/usr/include/aio.h	/^  int __error_code;$/;"	m	struct:aiocb64
__glibc_reserved	/usr/include/aio.h	/^  char __glibc_reserved[32];$/;"	m	struct:aiocb
__glibc_reserved	/usr/include/aio.h	/^  char __glibc_reserved[32];$/;"	m	struct:aiocb64
__need_sigevent_t	/usr/include/aio.h	27;"	d
__need_timespec	/usr/include/aio.h	29;"	d
__next_prio	/usr/include/aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb	typeref:struct:aiocb::aiocb
__next_prio	/usr/include/aio.h	/^  struct aiocb *__next_prio;$/;"	m	struct:aiocb64	typeref:struct:aiocb64::aiocb
__pad	/usr/include/aio.h	/^  char __pad[sizeof (__off64_t) - sizeof (__off_t)];$/;"	m	struct:aiocb
__policy	/usr/include/aio.h	/^  int __policy;$/;"	m	struct:aiocb
__policy	/usr/include/aio.h	/^  int __policy;$/;"	m	struct:aiocb64
__return_value	/usr/include/aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb
__return_value	/usr/include/aio.h	/^  __ssize_t __return_value;$/;"	m	struct:aiocb64
aio_buf	/usr/include/aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb
aio_buf	/usr/include/aio.h	/^  volatile void *aio_buf;	\/* Location of buffer.  *\/$/;"	m	struct:aiocb64
aio_cancel	/usr/include/aio.h	214;"	d
aio_cb_read	./server.h	/^	struct aiocb aio_cb_read;$/;"	m	struct:client_t	typeref:struct:client_t::aiocb
aio_cb_write	./server.h	/^	struct aiocb aio_cb_write;$/;"	m	struct:client_t	typeref:struct:client_t::aiocb
aio_debug	/usr/include/aio.h	/^    int aio_debug;		\/* Not used.  *\/$/;"	m	struct:aioinit
aio_error	/usr/include/aio.h	212;"	d
aio_fildes	/usr/include/aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb
aio_fildes	/usr/include/aio.h	/^  int aio_fildes;		\/* File desriptor.  *\/$/;"	m	struct:aiocb64
aio_fsync	/usr/include/aio.h	216;"	d
aio_idle_time	/usr/include/aio.h	/^    int aio_idle_time;		\/* Number of seconds before idle thread$/;"	m	struct:aioinit
aio_lio_opcode	/usr/include/aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb
aio_lio_opcode	/usr/include/aio.h	/^  int aio_lio_opcode;		\/* Operation to be performed.  *\/$/;"	m	struct:aiocb64
aio_locks	/usr/include/aio.h	/^    int aio_locks;		\/* Not used.  *\/$/;"	m	struct:aioinit
aio_nbytes	/usr/include/aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb
aio_nbytes	/usr/include/aio.h	/^  size_t aio_nbytes;		\/* Length of transfer.  *\/$/;"	m	struct:aiocb64
aio_num	/usr/include/aio.h	/^    int aio_num;		\/* Number of expected simultanious requests. *\/$/;"	m	struct:aioinit
aio_numusers	/usr/include/aio.h	/^    int aio_numusers;		\/* Not used.  *\/$/;"	m	struct:aioinit
aio_offset	/usr/include/aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb
aio_offset	/usr/include/aio.h	/^  __off64_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb64
aio_offset	/usr/include/aio.h	/^  __off_t aio_offset;		\/* File offset.  *\/$/;"	m	struct:aiocb
aio_read	/usr/include/aio.h	209;"	d
aio_reqprio	/usr/include/aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb
aio_reqprio	/usr/include/aio.h	/^  int aio_reqprio;		\/* Request priority offset.  *\/$/;"	m	struct:aiocb64
aio_reserved	/usr/include/aio.h	/^    int aio_reserved;$/;"	m	struct:aioinit
aio_return	/usr/include/aio.h	213;"	d
aio_sigevent	/usr/include/aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb	typeref:struct:aiocb::sigevent
aio_sigevent	/usr/include/aio.h	/^  struct sigevent aio_sigevent;	\/* Signal number and value.  *\/$/;"	m	struct:aiocb64	typeref:struct:aiocb64::sigevent
aio_suspend	/usr/include/aio.h	215;"	d
aio_threads	/usr/include/aio.h	/^    int aio_threads;		\/* Maximal number of threads.  *\/$/;"	m	struct:aioinit
aio_usedba	/usr/include/aio.h	/^    int aio_usedba;		\/* Not used.  *\/$/;"	m	struct:aioinit
aio_write	/usr/include/aio.h	210;"	d
aiocb	/usr/include/aio.h	/^struct aiocb$/;"	s
aiocb64	/usr/include/aio.h	/^struct aiocb64$/;"	s
aioinit	/usr/include/aio.h	/^struct aioinit$/;"	s
async_dataframe_read_completition_handler	./server.c	/^void async_dataframe_read_completition_handler(sigval_t sigval){$/;"	f
async_headers_read_completition_handler	./server.c	/^void async_headers_read_completition_handler(sigval_t sigval){$/;"	f
async_write_completition_handler	./server.c	/^void async_write_completition_handler(sigval_t sigval){$/;"	f
base64_encode	./websocket.c	/^static int base64_encode(const unsigned char* buffer, size_t length, unsigned char* b64text) {$/;"	f	file:
bytes_to_number	./websocket.c	/^static size_t bytes_to_number(unsigned char *buffer, size_t from, size_t to){$/;"	f	file:
client_socket	./server.h	/^	struct sockaddr_in client_socket;$/;"	m	struct:client_t	typeref:struct:client_t::sockaddr_in
client_t	./server.h	/^struct client_t{$/;"	s
data_pointer	./websocket.h	/^	char *data_pointer;$/;"	m	struct:websocket_message_t
errcode	./websocket.h	/^	enum EWS errcode;$/;"	m	struct:websocket_message_t	typeref:enum:websocket_message_t::EWS
fin	./websocket.h	/^	uint8_t fin;$/;"	m	struct:websocket_message_t
handle_write_buffer	./server.c	/^int8_t handle_write_buffer(struct client_t* req, char *data_pointer){$/;"	f
http_build_answer_handshake	./http.c	/^char *http_build_answer_handshake(unsigned char *accepted_key){$/;"	f
http_extract_key_from_valid_headers	./http.c	/^bool http_extract_key_from_valid_headers(char *headers, unsigned char *key){$/;"	f
is_masked	./websocket.h	/^	bool is_masked;$/;"	m	struct:websocket_message_t
length	./websocket.h	/^	size_t length;$/;"	m	struct:websocket_message_t
lio_listio	/usr/include/aio.h	211;"	d
main	./server.c	/^int main(int argc, char *argv[])$/;"	f
opcode	./websocket.h	/^	uint8_t opcode;$/;"	m	struct:websocket_message_t
read_capacity	./server.h	/^	size_t read_capacity;$/;"	m	struct:client_t
sem_read	./server.h	/^	sem_t sem_read;$/;"	m	struct:client_t
sem_write	./server.h	/^	sem_t sem_write;$/;"	m	struct:client_t
socketfd	./server.h	/^	int socketfd;$/;"	m	struct:client_t
websocket_calculate_hash	./websocket.c	/^int websocket_calculate_hash(const unsigned char *const user_handshake, unsigned char *server_handshake){$/;"	f
websocket_decode_headers	./websocket.c	/^struct websocket_message_t *websocket_decode_headers(void *ptr){$/;"	f
websocket_encode_message	./websocket.c	/^char * websocket_encode_message(const struct websocket_message_t *message){$/;"	f
websocket_message_t	./websocket.h	/^struct websocket_message_t{$/;"	s
websocket_unxor_message	./websocket.c	/^struct websocket_message_t *websocket_unxor_message(struct websocket_message_t *message){$/;"	f
write_capacity	./server.h	/^	size_t write_capacity;$/;"	m	struct:client_t
